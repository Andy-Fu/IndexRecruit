spring:
  profiles:
      active: dev

# datasource
  datasource:
      name: recruit
      url: jdbc:mysql://localhost:3306/recruit?characterEncoding=utf8&useSSL=false
      username: root
      password: 
# 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
# 连接池的补充设置，应用到上面所有数据源中
  # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
  # 配置获取连接等待超时的时间
      maxWait: 60000
  # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
  # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
  # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
  # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      spring.datasource.filters: stat,wall,log4j
  # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true

  thymeleaf:
      prefix: classpath:/templates/
      suffix: .html
      cache: false
      encoding: UTF-8
      mode: LEGACYHTML5
      content-type: text/html

mybatis:
  #mapper.xml所在位置
#  mapper-locations: classpath:mappers/*.xml
  # 实体类所在包
  type-aliases-package: qdu.java.recruit.entity



#文件上传
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 0
      max-file-size: 50MB
      max-request-size: 100MB
      resolve-lazily: false
        
 
